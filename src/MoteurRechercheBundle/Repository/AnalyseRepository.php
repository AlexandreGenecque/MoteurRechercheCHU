<?php

namespace MoteurRechercheBundle\Repository;

/**
 * AnalyseRepository
 *
 * This class was generated by the Doctrine ORM. Add your own custom
 * repository methods below.
 */
class AnalyseRepository extends \Doctrine\ORM\EntityRepository
{

	public function rechercheAnalyse($nomAnalyse){
		$queryBuider = $this->createQueryBuilder('a');
		$queryBuider ->where('a.nomAnalyse LIKE :nomAnalyse OR a.natureAnalyse LIKE :nomAnalyse')
			->orderBy('a.nomAnalyse', 'ASC')
			->setParameter('nomAnalyse','%'.$nomAnalyse.'%');

		return $queryBuider->getQuery()->getResult();	
	}

public function rechercheAnalyseWithLabo($nomAnalyse,$nomLaboratoire){
		$queryBuider = $this->createQueryBuilder('a');
		$queryBuider ->where('a.nomAnalyse LIKE :nomAnalyse OR a.natureAnalyse LIKE :nomAnalyse')
			->setParameter('nomAnalyse','%'.$nomAnalyse.'%')
			->andWhere('a.laboratoire = :laboratoire')
			->setParameter('laboratoire', $nomLaboratoire)
			->orderBy('a.nomAnalyse', 'ASC');


		return $queryBuider->getQuery()->getResult();	
	}

	public function rechercheAnalyseWithMicroOrg($nomAnalyse,$nomMicroOrganisme){

			$queryBuider = $this->createQueryBuilder('a');
			$queryBuider->innerJoin('a.microOrganisme_analyse', 'm')
			->where('m.id = :micro_organisme_id')
			->setParameter('micro_organisme_id', $nomMicroOrganisme)
			->andWhere('a.nomAnalyse LIKE :nomAnalyse ')
			->setParameter('nomAnalyse', '%'.$nomAnalyse.'%')
			->orderBy('a.nomAnalyse', 'ASC');

		return $queryBuider->getQuery()->getResult();

	}

	public function rechercheAnalyseMicroOrg($nomMicroOrganisme){

			$queryBuider = $this->createQueryBuilder('a');
			$queryBuider->innerJoin('a.microOrganisme_analyse', 'm')
			->where('m.id = :micro_organisme_id')
			->setParameter('micro_organisme_id', $nomMicroOrganisme)
			->orderBy('a.nomAnalyse', 'ASC');

		return $queryBuider->getQuery()->getResult();

	}

	
	public function rechercheAnalyseLabo($nomLaboratoire){
		$queryBuider = $this->createQueryBuilder('a');
		$queryBuider ->where('a.laboratoire = :laboratoire')
			->setParameter('laboratoire', $nomLaboratoire)
			->orderBy('a.nomAnalyse', 'ASC');

		return $queryBuider->getQuery()->getResult();	
	}

	

	public function rechercheAnalyseButton($lettre){
		$queryBuider = $this->createQueryBuilder('a');
		$queryBuider ->where('a.nomAnalyse LIKE :nomAnalyse')
			->orderBy('a.nomAnalyse', 'ASC')
			->setParameter('nomAnalyse',$lettre.'%');

		return $queryBuider->getQuery()->getResult();	
	}

	public function rechercheAnalyseWithAll($nomAnalyse,$nomLaboratoire,$nomMicroOrganisme){
		
		$queryBuider = $this->createQueryBuilder('a');
			$queryBuider->innerJoin('a.microOrganisme_analyse', 'm')
			->where('m.id = :micro_organisme_id')
			->setParameter('micro_organisme_id', $nomMicroOrganisme)
			->andWhere('a.nomAnalyse LIKE :nomAnalyse OR a.natureAnalyse LIKE :nomAnalyse')
			->setParameter('nomAnalyse', '%'.$nomAnalyse.'%')
			->andWhere('a.laboratoire = :laboratoire')
			->setParameter('laboratoire', $nomLaboratoire)
			->orderBy('a.nomAnalyse', 'ASC');


		return $queryBuider->getQuery()->getResult();	
	}

	public function rechercheAnalyseWithLaboAndMicroOrg($nomLaboratoire,$nomMicroOrganisme){
		
		$queryBuider = $this->createQueryBuilder('a');
			$queryBuider->innerJoin('a.microOrganisme_analyse', 'm')
			->where('m.id = :micro_organisme_id')
			->setParameter('micro_organisme_id', $nomMicroOrganisme)
			->andWhere('a.laboratoire = :laboratoire')
			->setParameter('laboratoire', $nomLaboratoire)
			->orderBy('a.nomAnalyse', 'ASC');


		return $queryBuider->getQuery()->getResult();	
	}




}
